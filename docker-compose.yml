version: '3.8'

services:
  web:
    container_name: twitter
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - static:/static
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db

  db:
    container_name: postgres_db
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_NAME: ${POSTGRES_NAME}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    env_file:
      - .env

  postgres_test:
    container_name: postgres_db_test
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST_TEST}
      POSTGRES_USER: ${POSTGRES_USER_TEST}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD_TEST}
      POSTGRES_PORT: ${POSTGRES_PORT_TEST}
      POSTGRES_NAME: ${POSTGRES_NAME_TEST}
    ports:
      - "${POSTGRES_PORT_TEST}:${POSTGRES_PORT_TEST}"
    env_file:
      - .env

  nginx:
    container_name: nginx
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - static:/static
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    restart: always
    depends_on:
      - web

volumes:
  postgres-data:
  static: